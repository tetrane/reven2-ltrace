#define __inout_opt
#define __in_opt
#define __out_opt
#define __inout
#define __opt
#define __out
#define __in
#define __reserved

#define __cdecl
#define __stdcall
#define __fastcall
#define __thiscall
#define __vectorcall

#define NTSYSAPI
#define WINAPI
#define __ptr64


; builtins
typedef __int8 = char;
typedef __int16 = short;
typedef __int32 = int;
typedef __int64 = long long;


; cosmetic
typedef addr = void*;
typedef _enum = int;
typedef _struct = addr;
typedef string = char*;
typedef wstring = wchar_t*;
typedef tstring = wstring;

; workaround for `unsigned __int64` and `signed __int64` causing parse error
typedef unsigned___int64 = unsigned long long;
typedef signed___int64 = signed long long;


; void
typedef VOID = void;
typedef PVOID = VOID*;
typedef LPVOID = VOID*;
typedef PCVOID = VOID*;
typedef LPCVOID = VOID*;


; scalars
typedef BYTE = unsigned char;
typedef PBYTE = BYTE*;
typedef LPBYTE = BYTE*;
typedef WORD = unsigned short;
typedef PWORD = WORD*;
typedef LPWORD = WORD*;
typedef DWORD = unsigned long;
typedef PDWORD = DWORD*;
typedef LPDWORD = DWORD*;
typedef BOOLEAN = BYTE;
typedef PBOOLEAN = BOOLEAN*;
typedef BOOL = int;
typedef PBOOL = BOOL*;
typedef LPBOOL = BOOL*;
typedef UINT = unsigned int;
typedef LONG = long;
typedef ULONG = unsigned long;
typedef PULONG = ULONG*;
typedef LONG_PTR = long;
typedef ULONG_PTR = __int64;
; typedef ULONG_PTR = unsigned long;
typedef PULONG_PTR = ULONG_PTR*;
typedef DWORD_PTR = ULONG_PTR;
typedef PDWORD_PTR = DWORD_PTR*;
typedef SIZE_T = ULONG_PTR;
typedef SSIZE_T = LONG_PTR;
typedef PSIZE_T = SIZE_T*;


; types
typedef ATOM = WORD;
typedef CCHAR = char;
typedef CHAR = char;
typedef DWORD32 = unsigned int;
typedef DWORD64 = unsigned___int64;
typedef DWORD64 = unsigned long long;
typedef DWORDLONG = unsigned___int64;
typedef FLOAT = float;
typedef HALF_PTR = int;
; typedef HALF_PTR = short;
typedef INT = int;
typedef INT16 = signed short;
typedef INT32 = signed int;
typedef INT64 = signed___int64;
typedef INT8 = signed char;
typedef INT_PTR = int;
typedef LONG32 = signed int;
typedef LONG64 = __int64;
typedef LONGLONG = __int64;
; typedef LONGLONG = double;
typedef LPARAM = LONG_PTR;
typedef LPINT = int*;
typedef LPLONG = long*;
typedef LRESULT = LONG_PTR;
typedef QWORD = unsigned___int64;
typedef SHORT = short;
typedef WCHAR = wchar_t;
; typedef TBYTE = unsigned char;
typedef TBYTE = WCHAR;
; typedef TCHAR = char;
typedef TCHAR = WCHAR;
typedef UCHAR = unsigned char;
typedef UHALF_PTR = unsigned int;
; typedef UHALF_PTR = unsigned short;
typedef UINT16 = unsigned short;
typedef UINT32 = unsigned int;
typedef UINT64 = unsigned___int64;
typedef UINT8 = unsigned char;
typedef UINT_PTR = unsigned___int64;
; typedef UINT_PTR = unsigned int;
typedef ULONG32 = unsigned int;
typedef ULONG64 = unsigned___int64;
; typedef ULONGLONG = double;
typedef ULONGLONG = unsigned___int64;
typedef USHORT = unsigned short;
typedef PCHAR = CHAR*;
typedef PDWORD32 = DWORD32*;
typedef PDWORD64 = DWORD64*;
typedef PDWORDLONG = DWORDLONG*;
typedef PFLOAT = FLOAT*;
typedef PHALF_PTR = HALF_PTR*;
typedef PINT = int*;
typedef PINT16 = INT16*;
typedef PINT32 = INT32*;
typedef PINT64 = INT64*;
typedef PINT8 = INT8*;
typedef PINT_PTR = INT_PTR*;
typedef PLONG = LONG*;
typedef PLONG32 = LONG32*;
typedef PLONG64 = LONG64*;
typedef PLONG_PTR = LONG_PTR*;
typedef PLONGLONG = LONGLONG*;
typedef PSHORT = SHORT*;
typedef PSSIZE_T = SSIZE_T*;
typedef PTBYTE = TBYTE*;
typedef PTCHAR = TCHAR*;
typedef PUCHAR = UCHAR*;
typedef PUHALF_PTR = UHALF_PTR*;
typedef PUINT = UINT*;
typedef PUINT16 = UINT16*;
typedef PUINT32 = UINT32*;
typedef PUINT64 = UINT64*;
typedef PUINT8 = UINT8*;
typedef PUINT_PTR = UINT_PTR*;
typedef PULONG32 = ULONG32*;
typedef PULONG64 = ULONG64*;
typedef PULONGLONG = ULONGLONG*;
typedef PUSHORT = USHORT*;
typedef PWCHAR = WCHAR*;


; strings
typedef PSTR = string;
typedef LPSTR = string;
typedef PCSTR = string;
typedef LPCSTR = string;

typedef PWSTR = wstring;
typedef LPWSTR = wstring;
typedef PCWSTR = wstring;
typedef LPCWSTR = wstring;

typedef PTSTR = tstring;
typedef LPTSTR = tstring;
typedef PCTSTR = tstring;
typedef LPCTSTR = tstring;

typedef UNICODE_STRING = _struct;
typedef PUNICODE_STRING = UNICODE_STRING*;
typedef PCUNICODE_STRING = UNICODE_STRING*;


; handles
typedef HANDLE = PVOID;
typedef PHANDLE = HANDLE*;
typedef LPHANDLE = HANDLE*;

typedef HACCEL = HANDLE;
typedef HBITMAP = HANDLE;
typedef HBRUSH = HANDLE;
typedef HCOLORSPACE = HANDLE;
typedef HCONV = HANDLE;
typedef HCONVLIST = HANDLE;
typedef HDC = HANDLE;
typedef HDDEDATA = HANDLE;
typedef HDESK = HANDLE;
typedef HDROP = HANDLE;
typedef HDWP = HANDLE;
typedef HENHMETAFILE = HANDLE;
typedef HFILE = int;
typedef HFONT = HANDLE;
typedef HGDIOBJ = HANDLE;
typedef HGLOBAL = HANDLE;
typedef HHOOK = HANDLE;
typedef HICON = HANDLE;
typedef HIMAGELIST = HANDLE;
typedef HINSTANCE = HANDLE;
typedef HKEY = HANDLE;
typedef HKL = HANDLE;
typedef HLOCAL = HANDLE;
typedef HMENU = HANDLE;
typedef HMETAFILE = HANDLE;
typedef HMONITOR = HANDLE;
typedef HPAINTBUFFER = HANDLE;
typedef HPALETTE = HANDLE;
typedef HPEN = HANDLE;
typedef HRGN = HANDLE;
typedef HRSRC = HANDLE;
typedef HSZ = HANDLE;
typedef HWND = HANDLE;
typedef SC_HANDLE = HANDLE;
typedef SERVICE_STATUS_HANDLE = HANDLE;
typedef WINSTA = HANDLE;

typedef HCURSOR = HICON;
typedef HMODULE = HINSTANCE;
typedef PHKEY = HKEY*;


; misc
typedef ACCESS_MASK = DWORD;
typedef BITMAPINFO = _struct;
typedef COLORREF = DWORD;
typedef FARPROC = addr;
typedef HRESULT = LONG;
typedef LANGID = WORD;
typedef LCID = DWORD;
typedef LCTYPE = DWORD;
typedef LGRPID = DWORD;
typedef LPCOLORREF = DWORD*;
typedef MSG = _struct;
typedef NTSTATUS = long;
typedef PACCESS_MASK = ACCESS_MASK*;
typedef PLCID = PDWORD;
typedef RECT = _struct;
typedef REGSAM = ULONG;
typedef SC_LOCK = LPVOID;
typedef SYSTEM_INFORMATION_CLASS = _enum;
typedef TOKEN_INFORMATION_CLASS = _enum;
typedef USN = LONGLONG;
typedef WPARAM = UINT_PTR;
